package Proj6;

import java.awt.event.KeyEvent;

/**
 *
 * @author Oscar Johansson, Andreas Ellingsen, Filip Joneus, Gustav Andersson
 */
public class MusicPlayerGUI extends javax.swing.JFrame {

	/**
	 * Creates new form MusicPlayerGUI
	 */
	public MusicPlayerGUI() {
		super("TuneIFY");
		playThisSong = "Enter Song or Artist";
		initComponents();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		play = new javax.swing.JButton();
		searchBar = new javax.swing.JTextField();
		searchButton = new javax.swing.JButton();
		currentSong = new javax.swing.JLabel();
		pause = new javax.swing.JButton();
		resultspane = new javax.swing.JScrollPane();
		results = new javax.swing.JList<>();
		stop = new javax.swing.JButton();
		showQueueButton = new javax.swing.JToggleButton();
		next = new javax.swing.JButton();
		timeline = new javax.swing.JSlider();
		songLength = new javax.swing.JTextField();
		queuepane = new javax.swing.JScrollPane();
		queue = new javax.swing.JList<>();
		elapsedTime = new javax.swing.JTextField();
		queuetext = new javax.swing.JTextField();
		background = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		getContentPane().setLayout(null);

		play.setText("PLAY");
		play.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				playActionPerformed(evt);
			}
		});
		getContentPane().add(play);
		play.setBounds(228, 406, 70, 35);

		searchBar.setBackground(new java.awt.Color(0, 0, 0, 64));
		searchBar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		searchBar.setForeground(new java.awt.Color(240, 240, 240));
		searchBar.setText("Enter Song or Artist");
		searchBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		searchBar.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				searchBarMouseClicked(evt);
			}

			public void mouseEntered(java.awt.event.MouseEvent evt) {
				searchBarMouseEntered(evt);
			}

			public void mouseExited(java.awt.event.MouseEvent evt) {
				searchBarMouseExited(evt);
			}
		});

		searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				searchBarKeyTyped(evt);
			}

			public void keyPressed(java.awt.event.KeyEvent evt) {
				searchBarKeyPressed(evt);
			}
		});

		getContentPane().add(searchBar);
		searchBar.setBounds(20, 20, 210, 30);

		searchButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
		searchButton.setText("Search");
		searchButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				searchButtonActionPerformed(evt);
			}
		});
		getContentPane().add(searchButton);
		searchButton.setBounds(230, 20, 63, 30);

		currentSong.setBackground(new java.awt.Color(204, 255, 255));
		currentSong.setFont(new java.awt.Font("Sylfaen", 3, 24)); // NOI18N
		currentSong.setForeground(java.awt.Color.white);
		currentSong.setText("No Song Playing");
		getContentPane().add(currentSong);
		currentSong.setBounds(180, 310, 260, 50);

		pause.setText("PAUSE");
		pause.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pauseActionPerformed(evt);
			}
		});
		getContentPane().add(pause);
		pause.setBounds(308, 406, 70, 35);

		results.setBackground(new java.awt.Color(0, 0, 0, 64));
		results.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		results.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		results.setForeground(new java.awt.Color(240, 240, 240));
		results.setModel(new javax.swing.AbstractListModel<String>() {
			String[] strings = { "Levels", "Wake Me Up", "Without You", "Lonely Together", "Love the way you lie",
					"Lose Yourself", "Rap God", "21 Rockstar", "Better Now", "Paranoid", "Rich & Sad", "Over Now",
					"Spoil My Night", "Losing You", "Warrior", "Crying Over You", "Our Worlds Collide", "Numb" };

			public int getSize() {
				return strings.length;
			}

			public String getElementAt(int i) {
				return strings[i];
			}
		});
		results.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		results.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		results.setDoubleBuffered(true);
		results.setOpaque(false);
		results.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				resultsMouseClicked(evt);
			}
		});
		resultspane.setViewportView(results);

		getContentPane().add(resultspane);
		resultspane.setBounds(20, 60, 270, 190);

		stop.setText("STOP");
		stop.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				stopActionPerformed(evt);
			}
		});
		getContentPane().add(stop);
		stop.setBounds(150, 406, 70, 35);

		showQueueButton.setText("Show Queue");
		showQueueButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				showQueueButtonActionPerformed(evt);
			}
		});
		getContentPane().add(showQueueButton);
		showQueueButton.setBounds(465, 412, 130, 23);

		next.setText("NEXT");
		next.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				nextActionPerformed(evt);
			}
		});
		getContentPane().add(next);
		next.setBounds(387, 406, 70, 35);

		timeline.setMaximum(101);
		timeline.setValue(0);
		timeline.setAutoscrolls(true);
		timeline.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				timelineStateChanged(evt);
			}
		});
		getContentPane().add(timeline);
		timeline.setBounds(210, 370, 200, 26);

		songLength.setBackground(new java.awt.Color(0, 0, 0, 64));
		songLength.setForeground(new java.awt.Color(240, 240, 240));
		songLength.setText("123");
		songLength.setBorder(null);

		getContentPane().add(songLength);
		songLength.setBounds(410, 370, 40, 30);

		queue.setBackground(new java.awt.Color(0, 0, 0, 64));
		queue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		queue.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		queue.setForeground(new java.awt.Color(240, 240, 240));
		queue.setModel(new javax.swing.AbstractListModel<String>() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3",
					"Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", " " };

			public int getSize() {
				return strings.length;
			}

			public String getElementAt(int i) {
				return strings[i];
			}
		});
		queue.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		queue.setDoubleBuffered(true);
		queue.setOpaque(false);
		queuepane.setViewportView(queue);

		getContentPane().add(queuepane);
		queuepane.setBounds(320, 60, 260, 190);
		queuepane.setVisible(false);

		elapsedTime.setBackground(new java.awt.Color(0, 0, 0, 64));
		elapsedTime.setForeground(new java.awt.Color(240, 240, 240));
		elapsedTime.setText("0");
		elapsedTime.setBorder(null);
		getContentPane().add(elapsedTime);
		elapsedTime.setBounds(170, 370, 40, 30);

		queuetext.setBackground(new java.awt.Color(0, 0, 0, 64));
		queuetext.setForeground(new java.awt.Color(240, 240, 240));
		queuetext.setText("Queue:");
		queuetext.setOpaque(false);
		getContentPane().add(queuetext);
		queuetext.setBounds(410, 30, 70, 30);
		queuetext.setVisible(false);

		background.setIcon(
				new javax.swing.ImageIcon("X:\\DokumentSkola\\AlgoritmerochDatastrukturer\\Project6\\imagex.jpg")); // NOI18N
		background.setText("Background");
		getContentPane().add(background);
		background.setBounds(0, 0, 600, 450);
		background.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				backgroundMouseClicked(evt);
			}

		});

		setSize(616, 480);
	}// </editor-fold>

	private void backgroundMouseClicked(java.awt.event.MouseEvent evt) {
		playThisSong = "Enter Song or Artist";

	}

	private void searchBarKeyPressed(java.awt.event.KeyEvent evt) {
		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
			System.out.println(playThisSong);
			playThisSong = "Enter Song or Artist";
			searchBar.setText(playThisSong);

		}

	}

	private void stopActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println("STOP");
	}

	private void resultsMouseClicked(java.awt.event.MouseEvent evt) {
		int x = results.getSelectedIndex();
		if (evt.getButton() == evt.BUTTON1 && evt.getClickCount() == 2) {
			System.out.println("play: " + x);
			currentSong.setText(results.getSelectedValue());
		} else if (evt.getButton() == evt.BUTTON3) {

			System.out.println(x + " added in queue");
		}

	}

	private void nextActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println("NEXT");
		timeline.setValue(timeline.getValue() + 1);
	}

	private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println(playThisSong);
		playThisSong = "Enter Song or Artist";
		searchBar.setText(playThisSong);
	}

	private void showQueueButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if (showQueueButton.isSelected()) {
			showQueueButton.setText("Hide Queue");
			queuepane.setVisible(true);
			queuetext.setVisible(true);

		} else if (!showQueueButton.isSelected()) {
			showQueueButton.setText("Show Queue");
			queuepane.setVisible(false);
			queuetext.setVisible(false);
		}
	}

	private void searchBarMouseClicked(java.awt.event.MouseEvent evt) {
		playThisSong = "";
		searchBar.setText(playThisSong);

	}

	private void searchBarMouseExited(java.awt.event.MouseEvent evt) {
		searchBar.setText(playThisSong);
	}

	private void searchBarMouseEntered(java.awt.event.MouseEvent evt) {
		searchBar.setText(playThisSong);
	}

	private void playActionPerformed(java.awt.event.ActionEvent evt) {
		playThisSong = "Enter Song or Artist";
		searchBar.setText(playThisSong);
		System.out.println("PLAY");

	}

	private void pauseActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println("PAUSE");
	}

	private void searchBarKeyTyped(java.awt.event.KeyEvent evt) {
		char c = evt.getKeyChar();
		playThisSong += c;

	}

	private void timelineStateChanged(javax.swing.event.ChangeEvent evt) {
		int x = timeline.getValue();
		System.out.println(x);
		elapsedTime.setText(x + "");

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MusicPlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MusicPlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MusicPlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MusicPlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MusicPlayerGUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JLabel background;
	private javax.swing.JLabel currentSong;
	private javax.swing.JTextField elapsedTime;
	private javax.swing.JButton next;
	private javax.swing.JButton pause;
	private javax.swing.JButton play;
	private javax.swing.JList<String> queue;
	private javax.swing.JScrollPane queuepane;
	private javax.swing.JTextField queuetext;
	private javax.swing.JList<String> results;
	private javax.swing.JScrollPane resultspane;
	private javax.swing.JTextField searchBar;
	private javax.swing.JButton searchButton;
	private javax.swing.JToggleButton showQueueButton;
	private javax.swing.JTextField songLength;
	private javax.swing.JButton stop;
	private javax.swing.JSlider timeline;
	private String playThisSong;
	// End of variables declaration
}
